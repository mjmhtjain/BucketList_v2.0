{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-list/add-list.component.css","webpack:///./src/app/add-list/add-list.component.html","webpack:///./src/app/add-list/add-list.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/list.service.ts","webpack:///./src/app/view-list/view-list.component.css","webpack:///./src/app/view-list/view-list.component.html","webpack:///./src/app/view-list/view-list.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"modal fade\\\" id=\\\"exampleModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Add BucketList</h5>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <div class=\\\"col-sm-2\\\">\\r\\n              <label for=\\\"title\\\" class=\\\"col-form-label\\\">Title</label>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-10\\\">\\r\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"newList.title\\\" name=\\\"title\\\" required>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <div class=\\\"col-sm-2\\\">\\r\\n              <label for=\\\"category\\\" class=\\\"col-form-label\\\">Priority</label>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-10\\\">\\r\\n              <select class=\\\"form-control\\\" [(ngModel)]=\\\"newList.priority\\\" name=\\\"category\\\">\\r\\n                <option value=\\\"p\\\" *ngFor=\\\"let p of priorityList\\\">{{p.level}}</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <div class=\\\"col-sm-2\\\">\\r\\n              <label for=\\\"description\\\" class=\\\"col-form-label\\\">description</label>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-10\\\">\\r\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"newList.description\\\" name=\\\"description\\\" required>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onSubmit()\\\">Add</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { List } from '../models/List';\r\nimport { ListService } from '../list.service';\r\nimport { Priority } from '../models/PriorityModel';\r\n\r\n@Component({\r\n  selector: 'app-add-list',\r\n  templateUrl: './add-list.component.html',\r\n  styleUrls: ['./add-list.component.css']\r\n})\r\nexport class AddListComponent implements OnInit {\r\n\r\n  constructor(private listServ: ListService) { }\r\n\r\n  private newList: List;\r\n  private priorityList: Priority[] = [];\r\n\r\n\r\n  @Output() addList: EventEmitter<List> = new EventEmitter<List>();\r\n\r\n  ngOnInit() {\r\n    // this.newList = {\r\n    //   title: '',\r\n    //   category: '',\r\n    //   description: '',\r\n    //   _id: ''\r\n\r\n    // };\r\n\r\n    this.loadPriorities((priority: Priority) => {\r\n      this.newList['priority'] = priority;\r\n    });\r\n\r\n  };\r\n\r\n  public loadPriorities(callback) {\r\n    this.listServ.getPriorities().subscribe(res => {\r\n      if (res['success']) {\r\n        console.log(res['object']);\r\n        this.priorityList = res['object'];\r\n        callback(this.priorityList[0]);\r\n      }\r\n    }, err => {\r\n\r\n    });\r\n  }\r\n\r\n  public onSubmit() {\r\n    this.listServ.addList(this.newList).subscribe(\r\n      response => {\r\n        // console.log(response);\r\n        if (response['success'] == true) {\r\n          this.addList.emit(response['object']);\r\n        }\r\n        //If success, update the view-list component\r\n      }\r\n    );\r\n\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-sm bg-light\\\">\\r\\n\\r\\n  <!-- Links -->\\r\\n  <ul class=\\\"nav nav-pills\\\">\\r\\n    <li class=\\\"nav-item\\\">\\r\\n      <a class=\\\"nav-link active\\\" href=\\\"#\\\">Link 1</a>\\r\\n    </li>\\r\\n    <li class=\\\"nav-item\\\">\\r\\n      <a class=\\\"nav-link\\\" href=\\\"#\\\">Link 2</a>\\r\\n    </li>\\r\\n    <li class=\\\"nav-item\\\">\\r\\n      <a class=\\\"nav-link\\\" href=\\\"#\\\">Link 3</a>\\r\\n    </li>\\r\\n  </ul>\\r\\n\\r\\n  <ul class=\\\"nav nav-pills ml-auto\\\">\\r\\n    <li class=\\\"nav-item\\\">\\r\\n      <a class=\\\"nav-link\\\" href=\\\"#\\\">User Name</a>\\r\\n    </li>\\r\\n\\r\\n    <li class=\\\"nav-item\\\">\\r\\n      <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\r\\n        <i class=\\\"far fa-user\\\"></i>\\r\\n      </a>\\r\\n    </li>\\r\\n  </ul>\\r\\n\\r\\n</nav>\\r\\n<div class=\\\"container-fluid\\\" style=\\\"margin-top: 10px\\\">\\r\\n  <div >\\r\\n    <app-view-list> </app-view-list>\\r\\n  </div>\\r\\n\\r\\n</div>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule  } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AddListComponent } from './add-list/add-list.component';\r\nimport { ViewListComponent } from './view-list/view-list.component';\r\nimport {ListService} from './list.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AddListComponent,\r\n    ViewListComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [ListService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n// import 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs';\r\nimport { List } from './models/List';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ListService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  private serverApi = 'http://localhost:3000';\r\n\r\n  public getAllLists(): Observable<any> {\r\n\r\n    let URI = `${this.serverApi}/bucketlist/`;\r\n    let obj = this.http.get(URI);\r\n    return obj;\r\n    // .map(res => res.json())\r\n    // .map(res => <List[]>res.lists);\r\n  }\r\n\r\n  public deleteList(listId: string) {\r\n    let URI = this.serverApi+'/bucketlist/'+listId;\r\n    let headers = new HttpHeaders;\r\n    headers.append('Content-Type', 'application/json');\r\n    let obj = this.http.delete(URI, { headers });\r\n    return obj;\r\n    // .map(res => res.json());\r\n  }\r\n\r\n  public addList(list: List) {\r\n    let URI = `${this.serverApi}/bucketlist/`;\r\n    let headers = new HttpHeaders;\r\n    // let body = JSON.stringify({ title: list.title, description: list.description, category: list.category });\r\n    let body = list;\r\n    // console.log(body);\r\n    headers.append('Content-Type', 'application/json');\r\n    let obj = this.http.post(URI, body, { headers: headers });\r\n    return obj;\r\n    // .map(res => res.json());\r\n  }\r\n\r\n  public getPriorities(){\r\n    let URI = this.serverApi+'/priority/fetchAll';\r\n    let obj = this.http.get(URI);\r\n    return obj;\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-12\\\">\\r\\n    <div class=\\\"d-flex justify-content-center\\\">\\r\\n      <div class=\\\"d-inline-flex \\\">\\r\\n        <h2> Awesome Bucketlist App </h2>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"row\\\" style=\\\"margin-bottom: 15px\\\">\\r\\n  <div class=\\\"col-sm-12\\\">\\r\\n    <div class=\\\"d-flex\\\">\\r\\n      <div class=\\\"align-self-start\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-toggle=\\\"modal\\\" data-target=\\\"#exampleModal\\\">\\r\\n          <i class=\\\"fas fa-plus\\\"></i>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-12\\\">\\r\\n    <!-- Table starts here -->\\r\\n    <table id=\\\"table\\\" class=\\\"table\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th>#</th>\\r\\n          <th>Priority Level</th>\\r\\n          <th>Title</th>\\r\\n          <th>Description</th>\\r\\n          <th> Delete </th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let list of lists; let i = index\\\">\\r\\n          <td>{{i+1}}</td>\\r\\n          <td>{{list.category_priorities[0].level}}</td>\\r\\n          <td>{{list.title}}</td>\\r\\n          <td>{{list.description}}</td>\\r\\n          <td>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deleteList(list); $event.stopPropagation();\\\">Delete</button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-add-list (addList)='onAddList($event)'> </app-add-list>\"","import { Component, OnInit } from '@angular/core';\r\nimport { List } from '../models/List';\r\nimport { ListService } from '../list.service';\r\n\r\n@Component({\r\n  selector: 'app-view-list',\r\n  templateUrl: './view-list.component.html',\r\n  styleUrls: ['./view-list.component.css']\r\n})\r\nexport class ViewListComponent implements OnInit {\r\n\r\n  private lists: any = [];\r\n  \r\n  // private priorityMap : any = {};\r\n\r\n  constructor(private listServ: ListService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    // this.loadPriorities();\r\n    this.loadLists();\r\n  }\r\n\r\n  public loadLists() {\r\n\r\n    //Get all lists from server and update the lists property\r\n    this.listServ.getAllLists().subscribe(res => {\r\n      let bucketList = res.lists;\r\n      // console.log(bucketList);\r\n      this.lists = bucketList;\r\n    }, err => {\r\n\r\n    });\r\n  }\r\n\r\n  public deleteList(list: List) {\r\n    this.listServ.deleteList(list._id).subscribe(\r\n      response => {\r\n        this.lists = this.lists.filter(lists => lists !== list);\r\n      }, err => {\r\n\r\n      });\r\n  }\r\n\r\n  public onAddList(newList) {\r\n    this.lists = this.lists.concat(newList);\r\n  }\r\n\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}